###################################################
# aahframework - Application Routes Configuration
#
# Complete configuration reference: TODO
###################################################

name = "aah application routes"

#------------------------------------------------
# All domains or sub-domains goes as section
# To understand routes configuration, refer: TODO
#------------------------------------------------
domains {

  # Domain name/ip address with port no, basically unique name
  aahframework {
    name = "aahframework.org routes"

    # aah supports multi-domain routes configuration out-of-the-box.
    # `host` used to determine domain routes for the incoming request.
    # For e.g: example.org
    host = "localhost"

    # `port` used to determine domain routes for the incoming request.
    # For port `80`, 443, put empty string or a value
    # Default value is 8080
    #port = ""

    # Redirect trailing slash is to enable automatic redirection if the current
    # route can't be matched but a `route` for the path with (without)
    # the trailing slash exists.
    # Default value is `true`.
    #redirect_trailing_slash = true

    # aah supports out-of-the-box `405 MethodNotAllowed` status with `Allow`
    # header as per `RFC7231`. Perfect for RESTful APIs.
    # Default value is `true`.
    #method_not_allowed = true

    # aah framework supports out-of-the-box `OPTIONS` request replies.
    # User defined `OPTIONS` routes take priority over the automatic replies.
    # Perfect for RESTful APIs.
    # Default value is `true`.
    #auto_options = true

    # Mapping your custom `NotFound` implementation. It is when no matching
    # route is found. If it is not set framework default is called. This is optional one.
    # Create your controller and action method with param called `isStatic bool`.
    # Framework tells you whether route is `static route` or `application route`.
    not_found {
      controller = "Site"
      action = "NotFound"
    }

    #-----------------------------------------------------------------
    # To serve Static files. It can be directory or individual file.
    # 'static' section is optional, if you don't have static files.
    # e.g.: REST API
    # Refer: TODO
    #-----------------------------------------------------------------
    static {

      #-------------------------------------
      # Static route name, pick a unique one
      # for serving directory
      #-------------------------------------
      public_assets {
        # URL 'path' for serving directory
        # Below definition means '/assets/**'
        path = "/assets"

        # Relative to application base directory or an absolute path
        dir = "static"

        # list directory, default is 'false'
        #list = true
      }

      # serving single file
      favicon {
        path = "/favicon.png"

        # Path with direct file mapping
        # It can be relative to application base directory or an absolute path
        # If it's relative path '/static/' prefixed automatically
        file = "img/aah-logo-32x32.png"
      }
    }

    #----------------------------------------------
    # Application routes, to know more.
    # Refer: TODO
    #----------------------------------------------
    routes {

      #------------------------------------------------------
      # namespace or group or route name, pick an unique name
      # This name is used for reverse route.
      #------------------------------------------------------
      index {
        # path is used to access URL
        path = "/"

        # Optional, default value is GET, it can be lowercase or uppercase
        #method = "GET"

        controller = "site.Site"

        # Optional, if want to go with defaults 'Action' names
        # Default action value for GET is 'Index',
        # Refer: TODO
        #action = "Index"
      }

      get_involved {
        path = "/get-involved.html"
        controller = "site.Site"
        action = "GetInvolved"
      }

      contribute_code {
        path = "/contribute-to-code.html"
        controller = "site.Site"
        action = "Content"
      }

      security_vulnerability {
        path = "/security.html"
        controller = "site.Site"
        action = "Content"
      }

      credits {
        path = "/credits.html"
        controller = "site.Site"
        action = "Content"
      }

      features {
        path = "/features.html"
        controller = "site.Site"
        action = "Content"
      }

      why_aah {
        path = "/why-aah.html"
        controller = "site.Site"
        action = "Content"
      }

    } # end - app routes

  } # end - aahframework

  docs_aahframework {
    name = "docs.aahframework.org routes"
    host = "docs.localhost"
    #port = "8080"
    subdomain = true

    method_not_allowed = true
    redirect_trailing_slash = true
    auto_options = false

    not_found {
      controller = "Doc"
      action = "NotFound"
    }

    routes {
      index {
        path = "/"
        controller = "docs.Doc"
      }

      refresh_doc {
        path = "/refresh"
        method = "POST"
        controller = "docs.Doc"
        action = "RefreshDoc"
      }

      version_home {
        path = "/:version"
        controller = "docs.Doc"
        action = "VersionHome"
      }

      show_doc {
        path = "/:version/*content"
        controller = "docs.Doc"
        action = "ShowDoc"
      }

    } # end - docs app routes

  } # end - docs aahframework

} # end - domains
